{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:8",
        "version": {
          "withMetadata": "6c6ccf3e03a085765fa427a3eda4595e66cf95051627f63e0ebc72413b2be1f2",
          "withoutMetadata": "273a610c8daef699e4ae0b4f4ed49ee39d1a17900f72431a0d3ae42172de469d",
          "linkedWithoutMetadata": "273a610c8daef699e4ae0b4f4ed49ee39d1a17900f72431a0d3ae42172de469d"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "deposit(address,address,uint256)",
          "withdraw(address,uint256,uint256,address,uint256)",
          "setHandler(address)",
          "setValidator(address)",
          "setToken(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeIN",
            "src": "contracts/BridgeIN.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "mainValidator",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:19"
            },
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:20"
            },
            {
              "label": "validatorstNonce",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:21"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:22"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:23"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(Proposal)198_storage)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)198_storage)": {
              "label": "mapping(uint256 => struct BridgeIN.Proposal)",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)198_storage": {
              "label": "struct BridgeIN.Proposal",
              "members": [
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "validationsNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "withdrawNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BridgeOUT.sol:BridgeOUT": {
        "src": "contracts/BridgeOUT.sol:8",
        "version": {
          "withMetadata": "6a99f604fe240d0fcb52aaa049344d79b29edbdd3d449d0b8dc69ba3d357276b",
          "withoutMetadata": "f85494f78334655155d8ce99eea76452c3fda86ababae66582da247e80672e45",
          "linkedWithoutMetadata": "f85494f78334655155d8ce99eea76452c3fda86ababae66582da247e80672e45"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "withdraw(address,address,uint256)",
          "deposit(address,uint256,uint256,address)",
          "setHandler(address)",
          "setValidator(address)",
          "setToken(address,bool,bool,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeOUT",
            "src": "contracts/BridgeOUT.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "withdrawNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:19"
            },
            {
              "label": "validatorstNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:20"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:21"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:22"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Proposal)198_storage)",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:23"
            },
            {
              "label": "erc20PrivatePair",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_address)",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)198_storage)": {
              "label": "mapping(uint256 => struct BridgeOUT.Proposal)",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)198_storage": {
              "label": "struct BridgeOUT.Proposal",
              "members": [
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "validationsNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "depositNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BridgeOUT.sol:BridgeOUT": {
        "src": "contracts/BridgeOUT.sol:8",
        "version": {
          "withMetadata": "8f426034ec6203de1a8db07cf99149a5cc3c28957dd760a619d7dfc70364d63e",
          "withoutMetadata": "f85494f78334655155d8ce99eea76452c3fda86ababae66582da247e80672e45",
          "linkedWithoutMetadata": "f85494f78334655155d8ce99eea76452c3fda86ababae66582da247e80672e45"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "withdraw(address,address,uint256)",
          "deposit(address,uint256,uint256,address)",
          "setHandler(address)",
          "setValidator(address)",
          "setToken(address,bool,bool,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeOUT",
            "src": "contracts/BridgeOUT.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "withdrawNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:19"
            },
            {
              "label": "validatorstNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:20"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:21"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:22"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Proposal)198_storage)",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:23"
            },
            {
              "label": "erc20PrivatePair",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_address)",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)198_storage)": {
              "label": "mapping(uint256 => struct BridgeOUT.Proposal)",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)198_storage": {
              "label": "struct BridgeOUT.Proposal",
              "members": [
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "validationsNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "depositNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Token.sol:Token": {
        "src": "contracts/Token.sol:7",
        "version": {
          "withMetadata": "f9ab74241aa0c266363fb4d3427fdd661b383979b831cf5c5b89455fd6c0bf92",
          "withoutMetadata": "67eda99fb5d70faf5e58f989d0d74e914e325925b845021d1f7d190083880e95",
          "linkedWithoutMetadata": "67eda99fb5d70faf5e58f989d0d74e914e325925b845021d1f7d190083880e95"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)",
          "setHandler(address)",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "handler",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Token",
              "src": "contracts/Token.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:8",
        "version": {
          "withMetadata": "48b90de3885a2d5402bfe09a4622590778906fcae5c1fad872ba469a75405236",
          "withoutMetadata": "273a610c8daef699e4ae0b4f4ed49ee39d1a17900f72431a0d3ae42172de469d",
          "linkedWithoutMetadata": "273a610c8daef699e4ae0b4f4ed49ee39d1a17900f72431a0d3ae42172de469d"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "deposit(address,address,uint256)",
          "withdraw(address,uint256,uint256,address,uint256)",
          "setHandler(address)",
          "setValidator(address)",
          "setToken(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeIN",
            "src": "contracts/BridgeIN.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "mainValidator",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:19"
            },
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:20"
            },
            {
              "label": "validatorstNonce",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:21"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:22"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:23"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(Proposal)198_storage)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)198_storage)": {
              "label": "mapping(uint256 => struct BridgeIN.Proposal)",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)198_storage": {
              "label": "struct BridgeIN.Proposal",
              "members": [
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "validationsNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "withdrawNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:8",
        "version": {
          "withMetadata": "ebd5401085212b1ab91562596384d81e7525531baa50a13e31ba83e87fea52a9",
          "withoutMetadata": "2fb5c50c5ad3fda4084e9c14e8f7726f8978589a7b8149a7d648be4369fb6c94",
          "linkedWithoutMetadata": "2fb5c50c5ad3fda4084e9c14e8f7726f8978589a7b8149a7d648be4369fb6c94"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "deposit(address,address,uint256)",
          "withdraw(address,uint256,uint256,address)",
          "setHandler(address)",
          "setValidator(address)",
          "setToken(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeIN",
            "src": "contracts/BridgeIN.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:19"
            },
            {
              "label": "validatorstNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:20"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:21"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:22"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Proposal)198_storage)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)198_storage)": {
              "label": "mapping(uint256 => struct BridgeIN.Proposal)",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)198_storage": {
              "label": "struct BridgeIN.Proposal",
              "members": [
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "validationsNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "withdrawNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BridgeOUT.sol:BridgeOUT": {
        "src": "contracts/BridgeOUT.sol:8",
        "version": {
          "withMetadata": "6a99f604fe240d0fcb52aaa049344d79b29edbdd3d449d0b8dc69ba3d357276b",
          "withoutMetadata": "f85494f78334655155d8ce99eea76452c3fda86ababae66582da247e80672e45",
          "linkedWithoutMetadata": "f85494f78334655155d8ce99eea76452c3fda86ababae66582da247e80672e45"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "withdraw(address,address,uint256)",
          "deposit(address,uint256,uint256,address)",
          "setHandler(address)",
          "setValidator(address)",
          "setToken(address,bool,bool,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeOUT",
            "src": "contracts/BridgeOUT.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "withdrawNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:19"
            },
            {
              "label": "validatorstNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:20"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:21"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:22"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Proposal)198_storage)",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:23"
            },
            {
              "label": "erc20PrivatePair",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_address)",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)198_storage)": {
              "label": "mapping(uint256 => struct BridgeOUT.Proposal)",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)198_storage": {
              "label": "struct BridgeOUT.Proposal",
              "members": [
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "validationsNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "depositNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:8",
        "version": {
          "withMetadata": "04739de3d951dfc2641c61f13e0bc89d0f98b14cca42a205323c81f607b04e8c",
          "withoutMetadata": "868419752e20e75fd6c5009077de5fd28d69d32f7f1ac1c43649efbfc8680706",
          "linkedWithoutMetadata": "868419752e20e75fd6c5009077de5fd28d69d32f7f1ac1c43649efbfc8680706"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "deposit(address,address,uint256)",
          "withdraw(address,uint256,uint256,address)",
          "setHandler(address)",
          "setValidator(address)",
          "setToken(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeIN",
            "src": "contracts/BridgeIN.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:19"
            },
            {
              "label": "validatorstNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:20"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:21"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:22"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Proposal)198_storage)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)198_storage)": {
              "label": "mapping(uint256 => struct BridgeIN.Proposal)",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)198_storage": {
              "label": "struct BridgeIN.Proposal",
              "members": [
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "validationsNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "withdrawNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BridgeOUT.sol:BridgeOUT": {
        "src": "contracts/BridgeOUT.sol:8",
        "version": {
          "withMetadata": "0ea4148e8d6c50b0fc21f1c7741983f1678b5eb1fe0cab575fb0385855f3467f",
          "withoutMetadata": "f21b6a5f7ceb5fb8526fa653ff7c90be6b631227dcae357f89b9e8671727169b",
          "linkedWithoutMetadata": "f21b6a5f7ceb5fb8526fa653ff7c90be6b631227dcae357f89b9e8671727169b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "withdraw(address,address,uint256)",
          "deposit(address,uint256,uint256,address)",
          "setHandler(address)",
          "setValidator(address)",
          "setToken(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeOUT",
            "src": "contracts/BridgeOUT.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "withdrawNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:19"
            },
            {
              "label": "validatorstNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:20"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:21"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:22"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Proposal)482_storage)",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)482_storage)": {
              "label": "mapping(uint256 => struct BridgeOUT.Proposal)",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)482_storage": {
              "label": "struct BridgeOUT.Proposal",
              "members": [
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "validationsNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "depositNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BridgeOUT.sol:BridgeOUT": {
        "src": "contracts/BridgeOUT.sol:9",
        "version": {
          "withMetadata": "fb6b132905370bb55a64736d5030e1a11d05b5f6fc4cd0dbead7bd48f946b7b6",
          "withoutMetadata": "f21b6a5f7ceb5fb8526fa653ff7c90be6b631227dcae357f89b9e8671727169b",
          "linkedWithoutMetadata": "f21b6a5f7ceb5fb8526fa653ff7c90be6b631227dcae357f89b9e8671727169b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "withdraw(address,address,uint256)",
          "deposit(address,uint256,uint256,address)",
          "setHandler(address)",
          "setValidator(address)",
          "setToken(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeOUT",
            "src": "contracts/BridgeOUT.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "withdrawNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:20"
            },
            {
              "label": "validatorstNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:21"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:22"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:23"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Proposal)198_storage)",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)198_storage)": {
              "label": "mapping(uint256 => struct BridgeOUT.Proposal)",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)198_storage": {
              "label": "struct BridgeOUT.Proposal",
              "members": [
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "validationsNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "depositNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:8",
        "version": {
          "withMetadata": "4633d596384e193bb48d4cdc9dd35ebffd033e2414ab1b8445998eb550f2952f",
          "withoutMetadata": "abb526b2a9775ef5fb17329616a4a981a960a93b34f2681ba9ef478df83fc26c",
          "linkedWithoutMetadata": "abb526b2a9775ef5fb17329616a4a981a960a93b34f2681ba9ef478df83fc26c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "deposit(address,address,uint256)",
          "withdraw(address,uint256,uint256,address)",
          "setHandler(address)",
          "setValidator(address)",
          "setToken(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeIN",
            "src": "contracts/BridgeIN.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:19"
            },
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:20"
            },
            {
              "label": "validatorstNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:21"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:22"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:23"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Proposal)997_storage)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)997_storage)": {
              "label": "mapping(uint256 => struct BridgeIN.Proposal)",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)997_storage": {
              "label": "struct BridgeIN.Proposal",
              "members": [
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "validationsNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "withdrawNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BridgeOUT.sol:BridgeIN": {
        "src": "contracts/BridgeOUT.sol:8",
        "version": {
          "withMetadata": "b1d5d7c2c76e6c4337a0e5176ff8fc2c77c753a901403e1e5932227d73c9e7f3",
          "withoutMetadata": "5e0e54caadfa89158d429b4696e1e3bbcd10d3850a6b31571c978c6ee79d3bf1",
          "linkedWithoutMetadata": "5e0e54caadfa89158d429b4696e1e3bbcd10d3850a6b31571c978c6ee79d3bf1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "withdraw(address,address,uint256)",
          "deposit(address,uint256,uint256,address)",
          "setHandler(address)",
          "setValidator(address)",
          "setToken(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeIN",
            "src": "contracts/BridgeOUT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeOUT.sol:19"
            },
            {
              "label": "withdrawNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeOUT.sol:20"
            },
            {
              "label": "validatorstNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeOUT.sol:21"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeOUT.sol:22"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeOUT.sol:23"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Proposal)1300_storage)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeOUT.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)1300_storage)": {
              "label": "mapping(uint256 => struct BridgeIN.Proposal)",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)1300_storage": {
              "label": "struct BridgeIN.Proposal",
              "members": [
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "validationsNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "depositNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CustomERC20.sol:CustomERC20": {
        "src": "contracts/CustomERC20.sol:12",
        "version": {
          "withMetadata": "799b27d22d67a57f7f9cf2ce41d8e707a175466514e971159fb1a02e36c17abc",
          "withoutMetadata": "2a2cc99c2d80184468f97f7f56ff2184c295520f903a3fab88cb2ec746532e5e",
          "linkedWithoutMetadata": "2a2cc99c2d80184468f97f7f56ff2184c295520f903a3fab88cb2ec746532e5e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "hasRole(bytes32,address)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CustomERC20",
            "src": "contracts/CustomERC20.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1604_storage)",
              "contract": "CustomERC20",
              "src": "contracts/CustomERC20.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1604_storage)": {
              "label": "mapping(bytes32 => struct CustomERC20.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1604_storage": {
              "label": "struct CustomERC20.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/ERC20Handler.sol:ERC20Handler": {
        "src": "contracts/ERC20Handler.sol:8",
        "version": {
          "withMetadata": "44b1e16e5c8792724606f04e04efc28239a8c7193ae19dd58d6647274791aec7",
          "withoutMetadata": "09aefa94c053533b70b8834b8a843590a8fa65f31d86e9267776493fe08b3d64",
          "linkedWithoutMetadata": "09aefa94c053533b70b8834b8a843590a8fa65f31d86e9267776493fe08b3d64"
        },
        "inherit": [
          "contracts/ERC20Safe.sol:ERC20Safe",
          "contracts/interfaces/IHandler.sol:IHandler"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Handler",
            "src": "contracts/ERC20Handler.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_bridgeAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC20Handler",
              "src": "contracts/ERC20Handler.sol:15"
            },
            {
              "label": "tokenProperties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(ERCTokenProperties)1962_storage)",
              "contract": "ERC20Handler",
              "src": "contracts/ERC20Handler.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(ERCTokenProperties)1962_storage)": {
              "label": "mapping(address => struct ERC20Handler.ERCTokenProperties)",
              "numberOfBytes": "32"
            },
            "t_struct(ERCTokenProperties)1962_storage": {
              "label": "struct ERC20Handler.ERCTokenProperties",
              "members": [
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isBurnable",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/ERC20Safe.sol:ERC20Safe": {
        "src": "contracts/ERC20Safe.sol:13",
        "version": {
          "withMetadata": "c0007a75a5320258c1e29e442348ae650adce1a29ee76aaef9c94e496fe553ad",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Token.sol:Token": {
        "src": "contracts/Token.sol:7",
        "version": {
          "withMetadata": "069351a2924be31207c01a9412b617d173c344628f481adf15c1f0458c0f0975",
          "withoutMetadata": "609d42439b47351fff52ca6774e9360a100db3a1372e01dd2e4f32e0a61d2143",
          "linkedWithoutMetadata": "609d42439b47351fff52ca6774e9360a100db3a1372e01dd2e4f32e0a61d2143"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)",
          "setHandler(address)",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "handler",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Token",
              "src": "contracts/Token.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:8",
        "version": {
          "withMetadata": "2b2be7c0f1f55960047e88ec25525fa7957d475758a3d33896aa3a98599e1554",
          "withoutMetadata": "caa2992cf4b28ea76b1f52e5084e8ce85b5d9580e89553528bea43b3c14ea267",
          "linkedWithoutMetadata": "caa2992cf4b28ea76b1f52e5084e8ce85b5d9580e89553528bea43b3c14ea267"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "deposit(address,address,uint256)",
          "withdraw(address,uint256,uint64,address)",
          "setHandler(address)",
          "setValidator(address)",
          "setToken(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeIN",
            "src": "contracts/BridgeIN.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:19"
            },
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:20"
            },
            {
              "label": "validatorstNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:21"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:22"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:23"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Proposal)17_storage)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)17_storage)": {
              "label": "mapping(uint256 => struct BridgeIN.Proposal)",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)17_storage": {
              "label": "struct BridgeIN.Proposal",
              "members": [
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "validationsNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "withdrawNonce",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 8,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:8",
        "version": {
          "withMetadata": "b89afce069356a464710b6fabee57c88bb0e217ed666b43532d6f00f38df26a9",
          "withoutMetadata": "d799d74499d9d4b7cc6af199db02a2d6196b5073c3f87bb0be539266fbdc1efc",
          "linkedWithoutMetadata": "d799d74499d9d4b7cc6af199db02a2d6196b5073c3f87bb0be539266fbdc1efc"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "()",
          "deposit(address,address,uint256)",
          "withdraw(address,uint256,uint64,address)",
          "setHandler(address)",
          "setValidator(address)",
          "setToken(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeIN",
            "src": "contracts/BridgeIN.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:19"
            },
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:20"
            },
            {
              "label": "validatorstNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:21"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:22"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:23"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Proposal)17_storage)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)17_storage)": {
              "label": "mapping(uint256 => struct BridgeIN.Proposal)",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)17_storage": {
              "label": "struct BridgeIN.Proposal",
              "members": [
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "validationsNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "withdrawNonce",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 8,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:8",
        "version": {
          "withMetadata": "6c219e495e7f3a19a747990127d048578efc6942c7ac577169245df2512c6743",
          "withoutMetadata": "8b0b0d8d8b882363bc6158986378dea1305c5811f6701d4bdfcd64a0e6d178b4",
          "linkedWithoutMetadata": "8b0b0d8d8b882363bc6158986378dea1305c5811f6701d4bdfcd64a0e6d178b4"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "()",
          "deposit(address,address,uint256)",
          "withdraw(address,uint256,uint64,address)",
          "setHandler(address)",
          "setValidator(address)",
          "setToken(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeIN",
            "src": "contracts/BridgeIN.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:19"
            },
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:20"
            },
            {
              "label": "validatorstNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:21"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:22"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:23"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Proposal)17_storage)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)17_storage)": {
              "label": "mapping(uint256 => struct BridgeIN.Proposal)",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)17_storage": {
              "label": "struct BridgeIN.Proposal",
              "members": [
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "validationsNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "withdrawNonce",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 8,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:8",
        "version": {
          "withMetadata": "b503fa631a92f5145e650b74681b77a99ee0a27b745df63357b52e7750facdd5",
          "withoutMetadata": "3daff86a9403fd8f15a3b628a31b6cbf6d1f36fae8c1b10c25567ba7e4731a1a",
          "linkedWithoutMetadata": "3daff86a9403fd8f15a3b628a31b6cbf6d1f36fae8c1b10c25567ba7e4731a1a"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "()",
          "deposit(address,address,uint256)",
          "withdraw(address,uint256,uint64,address)",
          "setHandler(address)",
          "setValidator(address)",
          "setToken(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeIN",
            "src": "contracts/BridgeIN.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:19"
            },
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:20"
            },
            {
              "label": "validatorstNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:21"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:22"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:23"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Proposal)849_storage)",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)849_storage)": {
              "label": "mapping(uint256 => struct BridgeIN.Proposal)",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)849_storage": {
              "label": "struct BridgeIN.Proposal",
              "members": [
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "validationsNonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "withdrawNonce",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 8,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CustomERC20.sol:CustomERC20": {
        "src": "contracts/CustomERC20.sol:12",
        "version": {
          "withMetadata": "799b27d22d67a57f7f9cf2ce41d8e707a175466514e971159fb1a02e36c17abc",
          "withoutMetadata": "2a2cc99c2d80184468f97f7f56ff2184c295520f903a3fab88cb2ec746532e5e",
          "linkedWithoutMetadata": "2a2cc99c2d80184468f97f7f56ff2184c295520f903a3fab88cb2ec746532e5e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "hasRole(bytes32,address)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CustomERC20",
            "src": "contracts/CustomERC20.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1160_storage)",
              "contract": "CustomERC20",
              "src": "contracts/CustomERC20.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1160_storage)": {
              "label": "mapping(bytes32 => struct CustomERC20.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1160_storage": {
              "label": "struct CustomERC20.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/ERC20Handler.sol:ERC20Handler": {
        "src": "contracts/ERC20Handler.sol:8",
        "version": {
          "withMetadata": "8622c8a96357d1ed362475af1006bc8c658d527cc16e88afad8baa0ee75502af",
          "withoutMetadata": "32473cd895c4ae6f0e0a57950a0405011527acc2c75881d6b49982a1b60f2a53",
          "linkedWithoutMetadata": "32473cd895c4ae6f0e0a57950a0405011527acc2c75881d6b49982a1b60f2a53"
        },
        "inherit": [
          "contracts/ERC20Safe.sol:ERC20Safe",
          "contracts/interfaces/IHandler.sol:IHandler"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Handler",
            "src": "contracts/ERC20Handler.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_bridgeAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC20Handler",
              "src": "contracts/ERC20Handler.sol:15"
            },
            {
              "label": "tokenProperties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(ERCTokenProperties)1518_storage)",
              "contract": "ERC20Handler",
              "src": "contracts/ERC20Handler.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(ERCTokenProperties)1518_storage)": {
              "label": "mapping(address => struct ERC20Handler.ERCTokenProperties)",
              "numberOfBytes": "32"
            },
            "t_struct(ERCTokenProperties)1518_storage": {
              "label": "struct ERC20Handler.ERCTokenProperties",
              "members": [
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isBurnable",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/ERC20Safe.sol:ERC20Safe": {
        "src": "contracts/ERC20Safe.sol:13",
        "version": {
          "withMetadata": "c0007a75a5320258c1e29e442348ae650adce1a29ee76aaef9c94e496fe553ad",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:8",
        "version": {
          "withMetadata": "66682a75f67cf44d3223fd2f49c9dfd470db3f0462aa724ed47cf7f325c7c15f",
          "withoutMetadata": "3625143cef7cbba3fdb001f373f672c20989da40f76e379800217ba4caae42d1",
          "linkedWithoutMetadata": "3625143cef7cbba3fdb001f373f672c20989da40f76e379800217ba4caae42d1"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "()",
          "deposit(address,address,uint256)",
          "handleWithdraw(address,uint256,uint64,address)",
          "setHandler(address)",
          "setToken(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeIN",
            "src": "contracts/BridgeIN.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:9"
            },
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:10"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:8",
        "version": {
          "withMetadata": "feea84be468495f9d6295931a4542a80c501f7e4047e823f7f84dcae53bf2d72",
          "withoutMetadata": "6ec7b5b23b8bc26757004612f56f31b4ba46181b9ecfdeed33b5c847770e766d",
          "linkedWithoutMetadata": "6ec7b5b23b8bc26757004612f56f31b4ba46181b9ecfdeed33b5c847770e766d"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "()",
          "deposit(address,address,uint256)",
          "handleWithdraw(address,uint256,uint64,address)",
          "setHandler(address)",
          "setToken(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeIN",
            "src": "contracts/BridgeIN.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:9"
            },
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:10"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:8",
        "version": {
          "withMetadata": "445660661df419c1258ee6d0918db32961f326438100a8252e070b8498b529d5",
          "withoutMetadata": "9fc3dc48e6e3d3f01cd1c4cfa51cf70176e84414ebd62f446253edc176539063",
          "linkedWithoutMetadata": "9fc3dc48e6e3d3f01cd1c4cfa51cf70176e84414ebd62f446253edc176539063"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "()",
          "deposit(address,address,uint256)",
          "handleWithdraw(address,uint256,uint64,address)",
          "setHandler(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeIN",
            "src": "contracts/BridgeIN.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:9"
            },
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:10"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:8",
        "version": {
          "withMetadata": "671b139b9eacd37cb1cb2eddb8ae84013a4a5696fcb1d793fa2d4f7daa5217fd",
          "withoutMetadata": "662381a7743105d96735abd7e88352030099535ad0dfbe0f2a7b30b0375edb00",
          "linkedWithoutMetadata": "662381a7743105d96735abd7e88352030099535ad0dfbe0f2a7b30b0375edb00"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "()",
          "deposit(address,address,uint256)",
          "handleWithdraw(address,uint256,uint64,address)",
          "setHandler(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BridgeIN",
            "src": "contracts/BridgeIN.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:9"
            },
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:10"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:8",
        "version": {
          "withMetadata": "cd08dd36d097eb251eedb310c115762e9e0941bcc1e5d900e9ced3c2616b452c",
          "withoutMetadata": "76c67bfe387c7cbdba0f1c1a2899a1a0d74a87a00590d090519d70e96ffd2962",
          "linkedWithoutMetadata": "76c67bfe387c7cbdba0f1c1a2899a1a0d74a87a00590d090519d70e96ffd2962"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "deposit(address,address,uint256)",
          "handleWithdraw(address,uint256,uint64,address)",
          "setHandler(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:9"
            },
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:10"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:8",
        "version": {
          "withMetadata": "87c27756c09ae7cf084c510397c22c05672606fc1490e01cacedf6e8aeda818d",
          "withoutMetadata": "555ba9c8641e7afa6728749ff24fa3762ceea5e5bd15aaea42626963fddab501",
          "linkedWithoutMetadata": "555ba9c8641e7afa6728749ff24fa3762ceea5e5bd15aaea42626963fddab501"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "deposit(address,address,uint256)",
          "handleWithdraw(address,uint256,uint64,address)",
          "setHandler(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:9"
            },
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:10"
            },
            {
              "label": "erc20Handler",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CustomERC20.sol:CustomERC20": {
        "src": "contracts/CustomERC20.sol:12",
        "version": {
          "withMetadata": "799b27d22d67a57f7f9cf2ce41d8e707a175466514e971159fb1a02e36c17abc",
          "withoutMetadata": "2a2cc99c2d80184468f97f7f56ff2184c295520f903a3fab88cb2ec746532e5e",
          "linkedWithoutMetadata": "2a2cc99c2d80184468f97f7f56ff2184c295520f903a3fab88cb2ec746532e5e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "hasRole(bytes32,address)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CustomERC20",
            "src": "contracts/CustomERC20.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)966_storage)",
              "contract": "CustomERC20",
              "src": "contracts/CustomERC20.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)966_storage)": {
              "label": "mapping(bytes32 => struct CustomERC20.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)966_storage": {
              "label": "struct CustomERC20.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/ERC20Handler.sol:ERC20Handler": {
        "src": "contracts/ERC20Handler.sol:8",
        "version": {
          "withMetadata": "ac77349ebb28d26d3d22afb9fa7a00a17ec6ff39bfd5272b418a57988b78a505",
          "withoutMetadata": "f3001bbf36e5b9c656f8a925d66c589ea99bf5bc14b4840079142c121911a3f8",
          "linkedWithoutMetadata": "f3001bbf36e5b9c656f8a925d66c589ea99bf5bc14b4840079142c121911a3f8"
        },
        "inherit": [
          "contracts/ERC20Safe.sol:ERC20Safe",
          "contracts/interfaces/IHandler.sol:IHandler"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Handler",
            "src": "contracts/ERC20Handler.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_bridgeAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC20Handler",
              "src": "contracts/ERC20Handler.sol:15"
            },
            {
              "label": "tokenProperties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(ERCTokenProperties)1324_storage)",
              "contract": "ERC20Handler",
              "src": "contracts/ERC20Handler.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(ERCTokenProperties)1324_storage)": {
              "label": "mapping(address => struct ERC20Handler.ERCTokenProperties)",
              "numberOfBytes": "32"
            },
            "t_struct(ERCTokenProperties)1324_storage": {
              "label": "struct ERC20Handler.ERCTokenProperties",
              "members": [
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isBurnable",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/ERC20Safe.sol:ERC20Safe": {
        "src": "contracts/ERC20Safe.sol:13",
        "version": {
          "withMetadata": "c0007a75a5320258c1e29e442348ae650adce1a29ee76aaef9c94e496fe553ad",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,address,uint256)",
          "withdraw(uint256,address,address)",
          "setResource(address,bool,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:6",
        "version": {
          "withMetadata": "44850a8a52ca272afef0ca771e58e8ad5764b50b478320d14c314afb14251b93",
          "withoutMetadata": "3fca6c0ca8ebe9b03ed7d1fae76a673916aa61bd7da0ff308ee9940c730b4fcf",
          "linkedWithoutMetadata": "3fca6c0ca8ebe9b03ed7d1fae76a673916aa61bd7da0ff308ee9940c730b4fcf"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "deposit()",
          "handleWithdraw(address,uint256,uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:7"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeOUT.sol:BridgeOUT": {
        "src": "contracts/BridgeOUT.sol:6",
        "version": {
          "withMetadata": "3091053c92d1d6f87c9fca8283a032f0b2fb55af17ac84bc60c403f7ba04c75c",
          "withoutMetadata": "0cd2ee1a40c8f526500b72a809ae6eb28eb38bbf50ae566fa4afe8b0d05a0a3f",
          "linkedWithoutMetadata": "0cd2ee1a40c8f526500b72a809ae6eb28eb38bbf50ae566fa4afe8b0d05a0a3f"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "handleProposal(uint8,uint256,uint64,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bridgeOUTdepositNonce",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:7"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeOUT.sol:BridgeOUT": {
        "src": "contracts/BridgeOUT.sol:6",
        "version": {
          "withMetadata": "8397f08660be1e3f7243e069334d919b13dd07ca360d968662ed729569af202f",
          "withoutMetadata": "7c60dea6392ec52e338185bc22b9d7a1efbb2961414af1665835b57a7daa58e9",
          "linkedWithoutMetadata": "7c60dea6392ec52e338185bc22b9d7a1efbb2961414af1665835b57a7daa58e9"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "handleProposal(uint8,uint256,uint64,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bridgeOUTdepositNonce",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:7"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeOUT.sol:BridgeOUT": {
        "src": "contracts/BridgeOUT.sol:6",
        "version": {
          "withMetadata": "170e523e85e02d1131fec0f2092e4f7ccffb0c5539431c2f3df71f82aeab8d5e",
          "withoutMetadata": "979707a15fc3eb57c9935fbc8ca35b47b0ffcc215b01fb088a3cbe1f62b509f3",
          "linkedWithoutMetadata": "979707a15fc3eb57c9935fbc8ca35b47b0ffcc215b01fb088a3cbe1f62b509f3"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "handleProposal(uint8,uint256,uint64,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bridgeOUTdepositNonce",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:7"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:6",
        "version": {
          "withMetadata": "a0cd85acfd0b24b6a97c803f52ab2c717011495636737a071b6917191101c70b",
          "withoutMetadata": "7e9852c37012fb91608a7f1b2f10e6d527dace5aefcad25af8bd53fefb184f05",
          "linkedWithoutMetadata": "7e9852c37012fb91608a7f1b2f10e6d527dace5aefcad25af8bd53fefb184f05"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "deposit()",
          "handleWithdraw(address,uint256,uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:7"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BridgeOUT.sol:BridgeOUT": {
        "src": "contracts/BridgeOUT.sol:6",
        "version": {
          "withMetadata": "83fd2ec24dd4a0402f1c6c9bb24b2ade34db92a68bc1bba8105dbeb08f770eb2",
          "withoutMetadata": "73ec276f560a87416e283e3be8f651b3e456a8aada2bdef1d706460f757adc0f",
          "linkedWithoutMetadata": "73ec276f560a87416e283e3be8f651b3e456a8aada2bdef1d706460f757adc0f"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "handleProposal(uint8,uint256,uint64,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bridgeOUTdepositNonce",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:7"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeOUT.sol:BridgeOUT": {
        "src": "contracts/BridgeOUT.sol:6",
        "version": {
          "withMetadata": "9f990e4f2f6556687b111876a475020828bda904c30fcb19111a6790036e421f",
          "withoutMetadata": "8805caac6fdcfc1f0b8c944161ff59f91b755a521826e5d741e9ef6ea7c82ce0",
          "linkedWithoutMetadata": "8805caac6fdcfc1f0b8c944161ff59f91b755a521826e5d741e9ef6ea7c82ce0"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "handleProposal(uint8,uint256,uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bridgeOUTdepositNonce",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BridgeOUT",
              "src": "contracts/BridgeOUT.sol:7"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:5",
        "version": {
          "withMetadata": "621188a94710dff1ed9df3e5b212c83400ae1f209ddcb6b2ea2870091a27cc30",
          "withoutMetadata": "5df37e8921089559d56d1ee69b6c5de12b9f389781532da32a9b979da13dd035",
          "linkedWithoutMetadata": "5df37e8921089559d56d1ee69b6c5de12b9f389781532da32a9b979da13dd035"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BridgeIN.sol:BridgeIN": {
        "src": "contracts/BridgeIN.sol:5",
        "version": {
          "withMetadata": "bbd0fc5c75f013e025305ff907f5c6786fd7c8fadf7886fd50db2ffc97b2c755",
          "withoutMetadata": "5df37e8921089559d56d1ee69b6c5de12b9f389781532da32a9b979da13dd035",
          "linkedWithoutMetadata": "5df37e8921089559d56d1ee69b6c5de12b9f389781532da32a9b979da13dd035"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "depositNonce",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BridgeIN",
              "src": "contracts/BridgeIN.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "a4bef4972d2e740cb5ca882c854f25907f2a4f53e5e34dcc4ee391b996a70926",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "ac60057525ad69f9391e3657a9d03d9ab78f30aa357c7eb350a7ffdfe3b8346f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "6f7655e40755445179673bbf265f05e3ab8ffd5e54bae8e2f10a54287769e1aa",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:12",
        "version": {
          "withMetadata": "727cd8b5422724cadb65b28886ea73094deedc43a2e4f9fe46dc09e6fcdfcd02",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:MessageHashUtils"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:51"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:MessageHashUtils": {
        "src": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:15",
        "version": {
          "withMetadata": "83eac02b4fd33686ed3262811f2134872ae3f6b18bd5278dd4d7e6136953a79b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f36fb3d7b7eddd9718875df41cb6ac0e8ff9758bc28ccfacd73109fc150ff07e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "a353038069828fa44f2321eee39d1501f381af4dd62af465aa97dbd8af7602fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Bridge.sol:Bridge": {
        "src": "contracts/Bridge.sol:18",
        "version": {
          "withMetadata": "ef00af5f99c3302900a484ac5cbe15144457e2b4fec096043dae3e41ef9db3d4",
          "withoutMetadata": "db96907a3e7e8d8442ddb2eb6296ca87c5de333a78330f39c02646baff9c4d2a",
          "linkedWithoutMetadata": "db96907a3e7e8d8442ddb2eb6296ca87c5de333a78330f39c02646baff9c4d2a"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/utils/Pausable.sol:Pausable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "(uint8)",
          "adminPauseTransfers()",
          "adminUnpauseTransfers()",
          "adminSetResource(address,bytes32,address,bytes)",
          "adminSetBurnable(address,address)",
          "adminSetDepositNonce(uint8,uint64)",
          "adminSetForwarder(address,bool)",
          "adminChangeAccessControl(address)",
          "adminChangeFeeHandler(address)",
          "adminWithdraw(address,bytes)",
          "deposit(uint8,bytes32,bytes,bytes)",
          "withdraw((uint8,uint64,bytes32,bytes),bytes)",
          "withdraws(struct Bridge.Proposal[],bytes)",
          "startKeygen()",
          "endKeygen(address)",
          "refreshKey(string)",
          "retry(string)",
          "isProposalExecuted(uint8,uint256)",
          "verify(struct Bridge.Proposal[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:124"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_domainID",
            "src": "contracts/Bridge.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/utils/Pausable.sol:24"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:51"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Bridge",
              "src": "contracts/Bridge.sol:26"
            },
            {
              "label": "_MPCAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Bridge",
              "src": "contracts/Bridge.sol:28"
            },
            {
              "label": "_feeHandler",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IFeeHandler)3486",
              "contract": "Bridge",
              "src": "contracts/Bridge.sol:30"
            },
            {
              "label": "_depositCounts",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint8,t_uint64)",
              "contract": "Bridge",
              "src": "contracts/Bridge.sol:40"
            },
            {
              "label": "_resourceIDToHandlerAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "Bridge",
              "src": "contracts/Bridge.sol:42"
            },
            {
              "label": "isValidForwarder",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Bridge",
              "src": "contracts/Bridge.sol:44"
            },
            {
              "label": "usedNonces",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint8,t_mapping(t_uint256,t_uint256))",
              "contract": "Bridge",
              "src": "contracts/Bridge.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IFeeHandler)3486": {
              "label": "contract IFeeHandler",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(uint8 => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint64)": {
              "label": "mapping(uint8 => uint64)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IERCHandler.sol:IERCHandler": {
        "src": "contracts/interfaces/IERCHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setBurnable(address)",
          "withdraw(bytes)",
          "_resourceIDToTokenContractAddress(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IFeeHandler.sol:IFeeHandler": {
        "src": "contracts/interfaces/IFeeHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectFee(address,uint8,uint8,bytes32,bytes,bytes)",
          "calculateFee(address,uint8,uint8,bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(bytes32,address,bytes)",
          "withdraw(bytes32,bytes)",
          "setResource(bytes32,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/utils/Pausable.sol:Pausable": {
        "src": "contracts/utils/Pausable.sol:13",
        "version": {
          "withMetadata": "c09b2555b3b576d31d52379e2ecb20d82909a29eae4e6519c7c99eb4f1bce43e",
          "withoutMetadata": "d729c282e248d18a64b489e373f26631be4c797b114dc6c4ed49f9258cf4b1ab",
          "linkedWithoutMetadata": "d729c282e248d18a64b489e373f26631be4c797b114dc6c4ed49f9258cf4b1ab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/utils/Pausable.sol:24"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8190e009429abc9112af0fbdaaee3f41acf4b7cdfb1909858f64f03edacd6a04",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "a4bef4972d2e740cb5ca882c854f25907f2a4f53e5e34dcc4ee391b996a70926",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "ac60057525ad69f9391e3657a9d03d9ab78f30aa357c7eb350a7ffdfe3b8346f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "6f7655e40755445179673bbf265f05e3ab8ffd5e54bae8e2f10a54287769e1aa",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:12",
        "version": {
          "withMetadata": "727cd8b5422724cadb65b28886ea73094deedc43a2e4f9fe46dc09e6fcdfcd02",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:MessageHashUtils"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:51"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:MessageHashUtils": {
        "src": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:15",
        "version": {
          "withMetadata": "83eac02b4fd33686ed3262811f2134872ae3f6b18bd5278dd4d7e6136953a79b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f36fb3d7b7eddd9718875df41cb6ac0e8ff9758bc28ccfacd73109fc150ff07e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "a353038069828fa44f2321eee39d1501f381af4dd62af465aa97dbd8af7602fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "5291ae876fe22535bbbdd491a3b97947bc6c0a18079f57161cb90f301f37199d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Bridge.sol:Bridge": {
        "src": "contracts/Bridge.sol:18",
        "version": {
          "withMetadata": "37eb5b3d70bb89652ae1466735abb5381b8efecf9e3334f2859e75f3502cdeeb",
          "withoutMetadata": "306a9740d10309d1ce3bd8c592a25d7ed69d33937cc93f94e31bc854e509ec2e",
          "linkedWithoutMetadata": "306a9740d10309d1ce3bd8c592a25d7ed69d33937cc93f94e31bc854e509ec2e"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/utils/Pausable.sol:Pausable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "(uint8,address)",
          "adminPauseTransfers()",
          "adminUnpauseTransfers()",
          "adminSetResource(address,bytes32,address,bytes)",
          "adminSetBurnable(address,address)",
          "adminSetDepositNonce(uint8,uint64)",
          "adminSetForwarder(address,bool)",
          "adminChangeAccessControl(address)",
          "adminChangeFeeHandler(address)",
          "adminWithdraw(address,bytes)",
          "deposit(uint8,bytes32,bytes,bytes)",
          "withdraw((uint8,uint64,bytes32,bytes),bytes)",
          "withdraws(struct Bridge.Proposal[],bytes)",
          "startKeygen()",
          "endKeygen(address)",
          "refreshKey(string)",
          "retry(string)",
          "isProposalExecuted(uint8,uint256)",
          "verify(struct Bridge.Proposal[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:125"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_domainID",
            "src": "contracts/Bridge.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/utils/Pausable.sol:24"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:51"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Bridge",
              "src": "contracts/Bridge.sol:26"
            },
            {
              "label": "_MPCAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Bridge",
              "src": "contracts/Bridge.sol:28"
            },
            {
              "label": "_feeHandler",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IFeeHandler)6031",
              "contract": "Bridge",
              "src": "contracts/Bridge.sol:30"
            },
            {
              "label": "_depositCounts",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint8,t_uint64)",
              "contract": "Bridge",
              "src": "contracts/Bridge.sol:40"
            },
            {
              "label": "_resourceIDToHandlerAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "Bridge",
              "src": "contracts/Bridge.sol:42"
            },
            {
              "label": "isValidForwarder",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Bridge",
              "src": "contracts/Bridge.sol:44"
            },
            {
              "label": "usedNonces",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint8,t_mapping(t_uint256,t_uint256))",
              "contract": "Bridge",
              "src": "contracts/Bridge.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IFeeHandler)6031": {
              "label": "contract IFeeHandler",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(uint8 => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint64)": {
              "label": "mapping(uint8 => uint64)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CustomERC20.sol:CustomERC20": {
        "src": "contracts/CustomERC20.sol:12",
        "version": {
          "withMetadata": "799b27d22d67a57f7f9cf2ce41d8e707a175466514e971159fb1a02e36c17abc",
          "withoutMetadata": "2a2cc99c2d80184468f97f7f56ff2184c295520f903a3fab88cb2ec746532e5e",
          "linkedWithoutMetadata": "2a2cc99c2d80184468f97f7f56ff2184c295520f903a3fab88cb2ec746532e5e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "hasRole(bytes32,address)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CustomERC20",
            "src": "contracts/CustomERC20.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)5087_storage)",
              "contract": "CustomERC20",
              "src": "contracts/CustomERC20.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)5087_storage)": {
              "label": "mapping(bytes32 => struct CustomERC20.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)5087_storage": {
              "label": "struct CustomERC20.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/ERC20Safe.sol:ERC20Safe": {
        "src": "contracts/ERC20Safe.sol:13",
        "version": {
          "withMetadata": "c0007a75a5320258c1e29e442348ae650adce1a29ee76aaef9c94e496fe553ad",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Forwarder.sol:Forwarder": {
        "src": "contracts/Forwarder.sol:10",
        "version": {
          "withMetadata": "baffd8a3dde0d67a41fcb2a89549e5dc190c83d949a618ae7295dbe8812aeead",
          "withoutMetadata": "e26b93f4f98885d91401bb6bfa2dbced68300d843e5e8717421e52eedead92d1",
          "linkedWithoutMetadata": "e26b93f4f98885d91401bb6bfa2dbced68300d843e5e8717421e52eedead92d1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "()",
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes),bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes),bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Forwarder",
            "src": "contracts/Forwarder.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:51"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Forwarder",
              "src": "contracts/Forwarder.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/XC20Safe.sol:XC20Safe": {
        "src": "contracts/XC20Safe.sol:12",
        "version": {
          "withMetadata": "b34578185b0797c49adc3aa240b81eb65b759b4bacd9bfa7340111c6e321be09",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [
          "contracts/ERC20Safe.sol:ERC20Safe"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IAccessControlSegregator.sol:IAccessControlSegregator": {
        "src": "contracts/interfaces/IAccessControlSegregator.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasAccess(bytes4,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IBridge.sol:IBridge": {
        "src": "contracts/interfaces/IBridge.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "_domainID()",
          "_resourceIDToHandlerAddress(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IERC20Plus.sol:IERC20Plus": {
        "src": "contracts/interfaces/IERC20Plus.sol:8",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IERCHandler.sol:IERCHandler": {
        "src": "contracts/interfaces/IERCHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setBurnable(address)",
          "withdraw(bytes)",
          "_resourceIDToTokenContractAddress(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IFeeHandler.sol:IFeeHandler": {
        "src": "contracts/interfaces/IFeeHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectFee(address,uint8,uint8,bytes32,bytes,bytes)",
          "calculateFee(address,uint8,uint8,bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/interfaces/IHandler.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(bytes32,address,bytes)",
          "withdraw(bytes32,bytes)",
          "setResource(bytes32,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/utils/AccessControl.sol:AccessControl": {
        "src": "contracts/utils/AccessControl.sol:43",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleMemberCount(bytes32)",
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberIndex(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)6088_storage)",
              "contract": "AccessControl",
              "src": "contracts/utils/AccessControl.sol:52"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)6088_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)3825_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)3510_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)6088_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)3825_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)3510_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/utils/FullMath.sol:FullMath": {
        "src": "contracts/utils/FullMath.sol:7",
        "version": {
          "withMetadata": "834632c5b4b8a6104a0117d482fec8e2477a272b994db92fe676728f44cfaa58",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/utils/Pausable.sol:Pausable": {
        "src": "contracts/utils/Pausable.sol:13",
        "version": {
          "withMetadata": "c09b2555b3b576d31d52379e2ecb20d82909a29eae4e6519c7c99eb4f1bce43e",
          "withoutMetadata": "d729c282e248d18a64b489e373f26631be4c797b114dc6c4ed49f9258cf4b1ab",
          "linkedWithoutMetadata": "d729c282e248d18a64b489e373f26631be4c797b114dc6c4ed49f9258cf4b1ab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/utils/Pausable.sol:24"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/utils/TickMath.sol:TickMath": {
        "src": "contracts/utils/TickMath.sol:7",
        "version": {
          "withMetadata": "239c72b4cdd64a3640501edd3cd410979e6b747ea9761a815a1b446ed6ee0634",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/Strategy.sol:Strategy": {
        "src": "contracts/Strategy.sol:5",
        "version": {
          "withMetadata": "393cd3ceafeea885b7923a59373dd7da3ac588a766e0e24220fe8ffafcaa14cd",
          "withoutMetadata": "23ecadd77d6788d0634b27fa82ecadb85453e5d2b3da029898f52796b5ec7e72",
          "linkedWithoutMetadata": "23ecadd77d6788d0634b27fa82ecadb85453e5d2b3da029898f52796b5ec7e72"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createStrategy(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "contracts/Test.sol:Test": {
        "src": "contracts/Test.sol:5",
        "version": {
          "withMetadata": "5ecc47059634cd7c934b55d1bfc453f2c91df129271da9707c3e30cb53f23475",
          "withoutMetadata": "23ecadd77d6788d0634b27fa82ecadb85453e5d2b3da029898f52796b5ec7e72",
          "linkedWithoutMetadata": "23ecadd77d6788d0634b27fa82ecadb85453e5d2b3da029898f52796b5ec7e72"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createStrategy(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "contracts/Test.sol:Test": {
        "src": "contracts/Test.sol:5",
        "version": {
          "withMetadata": "5ecc47059634cd7c934b55d1bfc453f2c91df129271da9707c3e30cb53f23475",
          "withoutMetadata": "23ecadd77d6788d0634b27fa82ecadb85453e5d2b3da029898f52796b5ec7e72",
          "linkedWithoutMetadata": "23ecadd77d6788d0634b27fa82ecadb85453e5d2b3da029898f52796b5ec7e72"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createStrategy(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "contracts/test.sol:Test": {
        "src": "contracts/test.sol:5",
        "version": {
          "withMetadata": "be4e25a7d993c740178547b54931de8d8900b3202bbdd4830520982f08d73b75",
          "withoutMetadata": "23ecadd77d6788d0634b27fa82ecadb85453e5d2b3da029898f52796b5ec7e72",
          "linkedWithoutMetadata": "23ecadd77d6788d0634b27fa82ecadb85453e5d2b3da029898f52796b5ec7e72"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createStrategy(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    }
  ]
}