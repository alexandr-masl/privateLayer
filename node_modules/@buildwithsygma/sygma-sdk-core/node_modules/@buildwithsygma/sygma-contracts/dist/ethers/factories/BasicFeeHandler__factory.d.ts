import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BasicFeeHandler, BasicFeeHandlerInterface } from "../BasicFeeHandler";
declare type BasicFeeHandlerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class BasicFeeHandler__factory extends ContractFactory {
    constructor(...args: BasicFeeHandlerConstructorParams);
    deploy(bridgeAddress: string, feeHandlerRouterAddress: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<BasicFeeHandler>;
    getDeployTransaction(bridgeAddress: string, feeHandlerRouterAddress: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): BasicFeeHandler;
    connect(signer: Signer): BasicFeeHandler__factory;
    static readonly contractName: "BasicFeeHandler";
    readonly contractName: "BasicFeeHandler";
    static readonly bytecode = "0x60c06040523480156200001157600080fd5b50604051620012dc380380620012dc833981016040819052620000349162000162565b6001600160a01b03808316608052811660a052620000546000336200005c565b50506200019a565b6200006882826200006c565b5050565b6000828152602081815260409091206200009191839062000a68620000d3821b17901c565b15620000685760405133906001600160a01b0383169084907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d90600090a45050565b6000620000ea836001600160a01b038416620000f3565b90505b92915050565b60008181526001830160205260408120546200013c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620000ed565b506000620000ed565b80516001600160a01b03811681146200015d57600080fd5b919050565b600080604083850312156200017657600080fd5b620001818362000145565b9150620001916020840162000145565b90509250929050565b60805160a05161110e620001ce600039600081816102710152610aba01526000818161018d0152610a88015261110e6000f3fe6080604052600436106100fe5760003560e01c8063745e6b6111610095578063a217fddf11610064578063a217fddf14610303578063abc9db0b14610318578063ca15c87314610338578063d547741f14610358578063ef4f081f1461037857600080fd5b8063745e6b611461025f5780639010d07c14610293578063904e9b2b146102b357806391d14854146102d357600080fd5b806336568abe116100d157806336568abe146101c75780634e0df3f6146101e75780635e1fab0f14610207578063632d589c1461022757600080fd5b8063248a9ca31461010357806325307065146101465780632f2ff15d1461015b578063318c136e1461017b575b600080fd5b34801561010f57600080fd5b5061013361011e366004610daa565b60009081526020819052604090206002015490565b6040519081526020015b60405180910390f35b610159610154366004610e3a565b6103dc565b005b34801561016757600080fd5b50610159610176366004610ee7565b610495565b34801561018757600080fd5b506101af7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161013d565b3480156101d357600080fd5b506101596101e2366004610ee7565b610523565b3480156101f357600080fd5b50610133610202366004610ee7565b61059d565b34801561021357600080fd5b50610159610222366004610f17565b6105c8565b34801561023357600080fd5b50610133610242366004610f34565b600160209081526000928352604080842090915290825290205481565b34801561026b57600080fd5b506101af7f000000000000000000000000000000000000000000000000000000000000000081565b34801561029f57600080fd5b506101af6102ae366004610f5e565b610638565b3480156102bf57600080fd5b506101596102ce366004610fc5565b610657565b3480156102df57600080fd5b506102f36102ee366004610ee7565b61089c565b604051901515815260200161013d565b34801561030f57600080fd5b50610133600081565b34801561032457600080fd5b50610159610333366004611031565b6108b4565b34801561034457600080fd5b50610133610353366004610daa565b6109d0565b34801561036457600080fd5b50610159610373366004610ee7565b6109e7565b34801561038457600080fd5b506103bf610393366004610e3a565b60ff86166000908152600160209081526040808320888452909152812054909850989650505050505050565b604080519283526001600160a01b0390911660208301520161013d565b6103e4610a7d565b60ff8616600090815260016020908152604080832088845290915290205434811461042957604051634dc2c71160e01b81523460048201526024015b60405180910390fd5b604080516001600160a01b038b16815260ff8a811660208301528916818301526060810188905260808101839052600060a082015290517fbd231b7fa4103e15e7a238c72f07e8aff310701af121895aa6c793b80245e4339181900360c00190a1505050505050505050565b6000828152602081905260409020600201546104b1903361089c565b6105155760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526e0818591b5a5b881d1bc819dc985b9d608a1b6064820152608401610420565b61051f8282610b3f565b5050565b6001600160a01b03811633146105935760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610420565b61051f8282610b98565b6000828152602081815260408083206001600160a01b03851684526001019091529020545b92915050565b336001600160a01b0382168114156106225760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f742072656e6f756e6365206f6e6573656c660000000000000000006044820152606401610420565b61062d600083610495565b61051f600082610523565b60008281526020819052604081206106509083610bf1565b9392505050565b61066260003361089c565b6106ae5760405162461bcd60e51b815260206004820152601e60248201527f73656e64657220646f65736e277420686176652061646d696e20726f6c6500006044820152606401610420565b8281146106fd5760405162461bcd60e51b815260206004820152601f60248201527f61646472735b5d2c20616d6f756e74735b5d3a2064696666206c656e677468006044820152606401610420565b60005b8381101561089557600085858381811061071c5761071c611064565b90506020020160208101906107319190610f17565b6001600160a01b031684848481811061074c5761074c611064565b9050602002013560405160006040518083038185875af1925050503d8060008114610793576040519150601f19603f3d011682016040523d82523d6000602084013e610798565b606091505b50509050806107e95760405162461bcd60e51b815260206004820152601960248201527f466565206574686572207472616e73666572206661696c6564000000000000006044820152606401610420565b7faaa40a232aaf133fdd28f3485f6fdd163514cfadbffa981f3610f42398efe34b600087878581811061081e5761081e611064565b90506020020160208101906108339190610f17565b86868681811061084557610845611064565b9050602002013560405161087a939291906001600160a01b039384168152919092166020820152604081019190915260600190565b60405180910390a1508061088d81611090565b915050610700565b5050505050565b60008281526020819052604081206106509083610bfd565b6108bf60003361089c565b61090b5760405162461bcd60e51b815260206004820152601e60248201527f73656e64657220646f65736e277420686176652061646d696e20726f6c6500006044820152606401610420565b60ff83166000908152600160209081526040808320858452909152902054818114156109795760405162461bcd60e51b815260206004820152601f60248201527f43757272656e742066656520697320657175616c20746f206e657720666565006044820152606401610420565b60ff8416600090815260016020908152604080832086845282529182902084905590518381527f6bbc57480a46553fa4d156ce702beef5f3ad66303b0ed1a5d4cb44966c6584c3910160405180910390a150505050565b60008181526020819052604081206105c290610c1f565b600082815260208190526040902060020154610a03903361089c565b6105935760405162461bcd60e51b815260206004820152603060248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526f2061646d696e20746f207265766f6b6560801b6064820152608401610420565b6000610650836001600160a01b038416610c29565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610adc5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b610b3d5760405162461bcd60e51b815260206004820152602c60248201527f73656e646572206d75737420626520627269646765206f722066656520726f7560448201526b1d195c8818dbdb9d1c9858dd60a21b6064820152608401610420565b565b6000828152602081905260409020610b579082610a68565b1561051f5760405133906001600160a01b0383169084907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d90600090a45050565b6000828152602081905260409020610bb09082610c78565b1561051f5760405133906001600160a01b0383169084907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b90600090a45050565b60006106508383610c8d565b6001600160a01b03811660009081526001830160205260408120541515610650565b60006105c2825490565b6000818152600183016020526040812054610c70575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105c2565b5060006105c2565b6000610650836001600160a01b038416610cb7565b6000826000018281548110610ca457610ca4611064565b9060005260206000200154905092915050565b60008181526001830160205260408120548015610da0576000610cdb6001836110ab565b8554909150600090610cef906001906110ab565b9050818114610d54576000866000018281548110610d0f57610d0f611064565b9060005260206000200154905080876000018481548110610d3257610d32611064565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d6557610d656110c2565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105c2565b60009150506105c2565b600060208284031215610dbc57600080fd5b5035919050565b6001600160a01b0381168114610dd857600080fd5b50565b803560ff81168114610dec57600080fd5b919050565b60008083601f840112610e0357600080fd5b50813567ffffffffffffffff811115610e1b57600080fd5b602083019150836020828501011115610e3357600080fd5b9250929050565b60008060008060008060008060c0898b031215610e5657600080fd5b8835610e6181610dc3565b9750610e6f60208a01610ddb565b9650610e7d60408a01610ddb565b955060608901359450608089013567ffffffffffffffff80821115610ea157600080fd5b610ead8c838d01610df1565b909650945060a08b0135915080821115610ec657600080fd5b50610ed38b828c01610df1565b999c989b5096995094979396929594505050565b60008060408385031215610efa57600080fd5b823591506020830135610f0c81610dc3565b809150509250929050565b600060208284031215610f2957600080fd5b813561065081610dc3565b60008060408385031215610f4757600080fd5b610f5083610ddb565b946020939093013593505050565b60008060408385031215610f7157600080fd5b50508035926020909101359150565b60008083601f840112610f9257600080fd5b50813567ffffffffffffffff811115610faa57600080fd5b6020830191508360208260051b8501011115610e3357600080fd5b60008060008060408587031215610fdb57600080fd5b843567ffffffffffffffff80821115610ff357600080fd5b610fff88838901610f80565b9096509450602087013591508082111561101857600080fd5b5061102587828801610f80565b95989497509550505050565b60008060006060848603121561104657600080fd5b61104f84610ddb565b95602085013595506040909401359392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156110a4576110a461107a565b5060010190565b6000828210156110bd576110bd61107a565b500390565b634e487b7160e01b600052603160045260246000fdfea26469706673582212208fb23c3150b02aaa12cc7d05b7508b031693847e83bc3f457ec27729b913db9364736f6c634300080b0033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        name?: undefined;
        anonymous?: undefined;
        outputs?: undefined;
        constant?: undefined;
        payable?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        stateMutability?: undefined;
        anonymous?: undefined;
        outputs?: undefined;
        constant?: undefined;
        payable?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        stateMutability?: undefined;
        outputs?: undefined;
        constant?: undefined;
        payable?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        constant: boolean;
        anonymous?: undefined;
        payable?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: never[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
        constant?: undefined;
        payable?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: never[];
        stateMutability: string;
        type: string;
        payable: boolean;
        anonymous?: undefined;
        constant?: undefined;
    })[];
    static createInterface(): BasicFeeHandlerInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): BasicFeeHandler;
}
export {};
