import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestDeposit, TestDepositInterface } from "../TestDeposit";
declare type TestDepositConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestDeposit__factory extends ContractFactory {
    constructor(...args: TestDepositConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<TestDeposit>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): TestDeposit;
    connect(signer: Signer): TestDeposit__factory;
    static readonly contractName: "TestDeposit";
    readonly contractName: "TestDeposit";
    static readonly bytecode = "0x608060405234801561001057600080fd5b506107f4806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632ce45cd7146100515780636c4515321461007a578063807f0ac51461008f578063ea5d2f2a146100a2575b600080fd5b61006461005f3660046102be565b6100b5565b604051610071919061035c565b60405180910390f35b61008d6100883660046104de565b610151565b005b61006461009d36600461055c565b6101ae565b61008d6100b03660046105a8565b6101f9565b606060008084846040516020016100ce939291906105fb565b60408051601f198184030181529082905263807f0ac560e01b82529150309063807f0ac59061010490849060209060040161063b565b600060405180830381865afa158015610121573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610149919081019061065d565b949350505050565b7fd22344359e41f3e1eb7d8e65930e1d5905b77ba2c80cacae4df04f44d1ce636e848484600181518110610187576101876106d4565b6020026020010151846040516101a094939291906106ea565b60405180910390a150505050565b60606101bc83838187610727565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092979650505050505050565b600060608061020a84860186610751565b8093508194508295505050507fd22344359e41f3e1eb7d8e65930e1d5905b77ba2c80cacae4df04f44d1ce636e86848460018151811061024c5761024c6106d4565b60200260200101518460405161026594939291906106ea565b60405180910390a1505050505050565b60008083601f84011261028757600080fd5b50813567ffffffffffffffff81111561029f57600080fd5b6020830191508360208285010111156102b757600080fd5b9250929050565b600080602083850312156102d157600080fd5b823567ffffffffffffffff8111156102e857600080fd5b6102f485828601610275565b90969095509350505050565b60005b8381101561031b578181015183820152602001610303565b8381111561032a576000848401525b50505050565b60008151808452610348816020860160208601610300565b601f01601f19169290920160200192915050565b60208152600061036f6020830184610330565b9392505050565b80356001600160a01b038116811461038d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156103d1576103d1610392565b604052919050565b600082601f8301126103ea57600080fd5b8135602067ffffffffffffffff82111561040657610406610392565b8160051b6104158282016103a8565b928352848101820192828101908785111561042f57600080fd5b83870192505b848310156104555761044683610376565b82529183019190830190610435565b979650505050505050565b600067ffffffffffffffff82111561047a5761047a610392565b50601f01601f191660200190565b600082601f83011261049957600080fd5b81356104ac6104a782610460565b6103a8565b8181528460208386010111156104c157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156104f457600080fd5b6104fd85610376565b935060208501359250604085013567ffffffffffffffff8082111561052157600080fd5b61052d888389016103d9565b9350606087013591508082111561054357600080fd5b5061055087828801610488565b91505092959194509250565b60008060006040848603121561057157600080fd5b833567ffffffffffffffff81111561058857600080fd5b61059486828701610275565b909790965060209590950135949350505050565b6000806000604084860312156105bd57600080fd5b6105c684610376565b9250602084013567ffffffffffffffff8111156105e257600080fd5b6105ee86828701610275565b9497909650939450505050565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b60408152600061064e6040830185610330565b90508260208301529392505050565b60006020828403121561066f57600080fd5b815167ffffffffffffffff81111561068657600080fd5b8201601f8101841361069757600080fd5b80516106a56104a782610460565b8181528560208385010111156106ba57600080fd5b6106cb826020830160208601610300565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038581168252602082018590528316604082015260806060820181905260009061071d90830184610330565b9695505050505050565b6000808585111561073757600080fd5b8386111561074457600080fd5b5050820193919092039150565b60008060006060848603121561076657600080fd5b83359250602084013567ffffffffffffffff8082111561078557600080fd5b610791878388016103d9565b935060408601359150808211156107a757600080fd5b506107b486828701610488565b915050925092509256fea26469706673582212209931c3c0415a24a3766e2647bf19776363ab34db5cafa21de49925e8f8f8134564736f6c634300080b0033";
    static readonly abi: ({
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): TestDepositInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestDeposit;
}
export {};
